Index: app/src/main/java/com/eight/collection/ui/writing/second/who/WritesecondWhoFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.eight.collection.ui.writing.second.who\n\nimport android.os.Bundle\nimport android.os.Handler\nimport android.os.Looper\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.Toast\nimport androidx.fragment.app.Fragment\nimport com.eight.collection.data.remote.getaddedblock.GetAddedBlockResult\nimport com.eight.collection.data.remote.getaddedblock.GetAddedBlockService\nimport com.eight.collection.data.remote.modi.ModiResult\nimport com.eight.collection.data.remote.modi.ModiService\nimport com.eight.collection.databinding.FragmentWritesecondWhoBinding\nimport com.eight.collection.ui.writing.CustomDialogInterface\nimport com.eight.collection.ui.writing.GetAddedBlockView\nimport com.eight.collection.ui.writing.ModiView\nimport com.eight.collection.ui.writing.first.shoes.WritefirstShoes\nimport com.eight.collection.ui.writing.second.*\nimport com.eight.collection.ui.writing.second.place.WritesecondPlaceRVAdapter\nimport com.eight.collection.ui.writing.second.weather.WritesecondWeatherRVAdapter\nimport com.google.android.flexbox.FlexboxLayoutManager\n\nclass WritesecondWhoFragment : Fragment(), CustomDialogInterface,\n    WritesecondWhoRVAdapter.WhoClickListener, WritesecondActivity.GetWhoDataListener,\n    GetAddedBlockView, ModiView, WritesecondActivity.RefreshWhoDataListener {\n    lateinit var binding : FragmentWritesecondWhoBinding\n    var whoDatas = ArrayList<WritesecondWho>()\n    lateinit var customDialog: WritesecondWhoCustomDialog\n    private var idcount : Int = 7\n    var whoRVAdapter : WritesecondWhoRVAdapter = WritesecondWhoRVAdapter(whoDatas)\n    var date : String = \"2021-01-01\"\n    var mode : Int = 1\n\n    override fun onCreateView(\n        inflater: LayoutInflater,\n        container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View? {\n        binding = FragmentWritesecondWhoBinding.inflate(inflater,container,false)\n\n        // 데이터 리스트 생성\n        whoDatas.apply {\n            add(WritesecondWho(\"+\", 0,0))\n            add(WritesecondWho(\"친구\", 1,1))\n            add(WritesecondWho(\"가족\", 2,2))\n            add(WritesecondWho(\"동료\", 3,3))\n            add(WritesecondWho(\"선생님\", 4,4))\n            add(WritesecondWho(\"애인\", 5,5))\n            add(WritesecondWho(\"혼자\", 6,6))\n        }\n\n        getAddedBlock()\n\n        mode = (activity as WritesecondActivity).mode\n        if(mode == 2) {\n            modi()\n        }\n\n        Handler(Looper.getMainLooper()).postDelayed({\n            whoRVAdapter = WritesecondWhoRVAdapter(whoDatas)\n            whoRVAdapter.setWhoClickListener(this)\n\n            val flexboxLayoutManager = FlexboxLayoutManager(activity)\n            binding.writesecondWhoRecyclerview.adapter = whoRVAdapter\n            binding.writesecondWhoRecyclerview.layoutManager = flexboxLayoutManager\n        }, 200)\n\n\n        return binding.root\n    }\n\n    override fun onAddButtonClicked(addText: String) {\n        whoDatas.apply {\n            add(WritesecondWho(addText,idcount))\n            idcount += 1\n        }\n\n        whoRVAdapter.notifyDataSetChanged()\n    }\n\n    override fun onCancelButtonClicked() {\n    }\n\n    override fun plusButtonClick() {\n        customDialog = WritesecondWhoCustomDialog(requireContext(), this)\n        customDialog.show()\n    }\n\n    override fun getFixedData(): ArrayList<Int> {\n        var fixedWho = arrayListOf<Int>()\n        fixedWho = whoRVAdapter.getRVAFixedData()\n        return fixedWho\n    }\n\n    override fun getAddedData(): ArrayList<String> {\n        var addedWho = arrayListOf<String>()\n        addedWho = whoRVAdapter.getRVAAddedData()\n        return addedWho\n    }\n\n    private fun getAddedBlock(){\n        GetAddedBlockService.getAddedBlock(this)\n    }\n\n    override fun onGetAddedBlockLoading() {\n\n    }\n\n    override fun onGetAddedBlockSuccess(getaddedblockresult: GetAddedBlockResult) {\n        if(getaddedblockresult.awho != null) {\n            for (i in getaddedblockresult.awho) {\n                whoDatas.apply {\n                    add(WritesecondWho(i, idcount))\n                    idcount += 1\n                }\n            }\n            whoRVAdapter.notifyDataSetChanged()\n        }\n    }\n\n    override fun onGetAddedBlockFailure(code: Int, message: String) {\n    }\n\n\n    private fun modi(){\n        date = (activity as WritesecondActivity).modidate.toString()\n        ModiService.modi(this, date!!)\n    }\n\n    override fun onModiLoading() {\n    }\n\n    override fun onModiSuccess(modiresult: ModiResult) {\n        if(modiresult.selected?.who.isNullOrEmpty() == false){\n            for(i in whoDatas){\n                for(j in modiresult.selected?.who!!){\n                    if(i.name == j){\n                        i.apply{\n                            i.focus = true\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    override fun onModiFailure(code: Int, message: String) {\n    }\n\n    override fun refreshData() {\n        for(i in whoDatas){\n            i.apply{\n                i.focus = false\n            }\n        }\n        whoRVAdapter.notifyDataSetChanged()\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/eight/collection/ui/writing/second/who/WritesecondWhoFragment.kt b/app/src/main/java/com/eight/collection/ui/writing/second/who/WritesecondWhoFragment.kt
--- a/app/src/main/java/com/eight/collection/ui/writing/second/who/WritesecondWhoFragment.kt	(revision 99780c6c70106d18888a2546cb17a4b3e28d09b8)
+++ b/app/src/main/java/com/eight/collection/ui/writing/second/who/WritesecondWhoFragment.kt	(date 1647411055354)
@@ -66,7 +66,7 @@
             val flexboxLayoutManager = FlexboxLayoutManager(activity)
             binding.writesecondWhoRecyclerview.adapter = whoRVAdapter
             binding.writesecondWhoRecyclerview.layoutManager = flexboxLayoutManager
-        }, 200)
+        }, 300)
 
 
         return binding.root
Index: app/src/main/java/com/eight/collection/ui/writing/second/who/WritesecondWhoRVAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.eight.collection.ui.writing.second.who\n\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.recyclerview.widget.RecyclerView\nimport com.eight.collection.data.entities.Write.Block\nimport com.eight.collection.data.remote.deleteblock.DeleteBlockService\nimport com.eight.collection.databinding.ItemWritesecondWhoBinding\nimport com.eight.collection.ui.writing.DeleteBlockView\nimport com.eight.collection.ui.writing.second.AddedPlace\nimport com.eight.collection.ui.writing.second.AddedWho\nimport com.eight.collection.ui.writing.second.FixedPlace\nimport com.eight.collection.ui.writing.second.FixedWho\n\nclass WritesecondWhoRVAdapter(private val whoList: ArrayList<WritesecondWho>) : RecyclerView.Adapter<WritesecondWhoRVAdapter.ViewHolder>(), DeleteBlockView{\n    private var clickListener: WhoClickListener? = null\n    private var count : Int = 0\n    private var selectId : Int = -1\n    private var beforeId : Int = -1\n\n\n    interface WhoClickListener {\n        fun plusButtonClick()\n    }\n\n    fun setWhoClickListener(whoClickListener: WhoClickListener) {\n        this.clickListener = whoClickListener\n    }\n\n\n    override fun onCreateViewHolder(viewGroup: ViewGroup, viewType: Int): ViewHolder {\n        val binding : ItemWritesecondWhoBinding = ItemWritesecondWhoBinding.inflate(LayoutInflater.from(viewGroup.context), viewGroup, false)\n        return ViewHolder(binding)\n    }\n\n    override fun onBindViewHolder(holder: ViewHolder, position: Int) {\n        holder.binding.writesecondWhoTextButton.isChecked = whoList[position].focus\n        holder.bind(whoList[position],position)\n        holder.setIsRecyclable(false)\n    }\n\n    override fun getItemCount(): Int = whoList.size\n\n\n    inner class ViewHolder(val binding: ItemWritesecondWhoBinding) : RecyclerView.ViewHolder(binding.root){\n        fun bind(who: WritesecondWho, position: Int){\n            binding.writesecondWhoTextButton.apply {\n                if(whoList[position].id < 7) {\n                    text = who.name\n                }\n                else {\n                    text = who.name + \"    \"\n                }\n                // select 여부 확인 및 상태 변경\n                setOnClickListener {\n                    when (whoList[position].id) {\n                        0 -> {\n                            clickListener?.plusButtonClick()\n                            isChecked = false\n                        }\n                        else -> {\n                            // 처음 선택시\n                            if (selectId == -1) {\n                                whoList[position].focus = true\n                                selectId = position\n                            }\n                            // 선택한거 다시 클릭시\n                            else if (selectId == position) {\n                                whoList[selectId].focus = false\n                                selectId = -1\n                            }\n                            // 선택한거말고 다른거 클릭시\n                            else {\n                                whoList[selectId].focus = false\n                                whoList[position].focus = true\n                                selectId = position\n                            }\n                        }\n                    }\n                    notifyDataSetChanged()\n                }\n            }\n            binding.writesecondWhoDeleteButton.apply {\n                if (whoList[position].id < 7) {\n                    visibility = View.GONE\n                } else {\n                    visibility = View.VISIBLE\n                    setOnClickListener{\n                        when (whoList[position].id){\n                            0 -> {}\n                            else -> {\n                                removeItem(position)\n                                if(position == selectId){\n                                    selectId = -1\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // 데이터 추가 메소드 (데이터 및 삭제아이콘 추가)\n    fun addItem(who: WritesecondWho){\n        whoList.add(who)\n        notifyDataSetChanged()\n    }\n\n    // 데이터 삭제 메소드\n    fun removeItem(position: Int){\n        deleteBlock(whoList[position].name.toString())\n        whoList.removeAt(position)\n        notifyDataSetChanged()\n    }\n\n    private fun getBlock(content : String) : Block {\n        val clothes : Int = -1\n        val pww : Int = 2\n        return Block(clothes,pww,content)\n    }\n\n    private fun deleteBlock(content : String) {\n        DeleteBlockService.deleteBlock(this, getBlock(content))\n    }\n\n    override fun onDeleteBlockLoading() {\n\n    }\n\n    override fun onDeleteBlockSuccess() {\n        Log.d(\"message\",\"Delete Success\")\n    }\n\n    override fun onDeleteBlockFailure(code: Int, message: String) {\n        when(code) {\n            4006, 4007 -> {\n                Log.d(\"message\",message)\n            }\n            else -> {\n                Log.d(\"message\",\"SERVER ERROR\")\n            }\n        }\n    }\n\n    fun getRVAFixedData() : ArrayList<Int> {\n        val fixedWho = arrayListOf<Int>()\n        for(i in whoList){\n            if(i.id < 7){\n                if(i.focus == true){\n                    fixedWho.apply{\n                        add(i.index)\n                    }\n                }\n            }\n        }\n        return fixedWho\n    }\n\n    fun getRVAAddedData() : ArrayList<String> {\n        val addedWho = arrayListOf<String>()\n        for(i in whoList) {\n            if (i.id > 6) {\n                if (i.focus == true) {\n                    addedWho.apply {\n                        add(i.name)\n                    }\n                }\n            }\n        }\n        return addedWho\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/eight/collection/ui/writing/second/who/WritesecondWhoRVAdapter.kt b/app/src/main/java/com/eight/collection/ui/writing/second/who/WritesecondWhoRVAdapter.kt
--- a/app/src/main/java/com/eight/collection/ui/writing/second/who/WritesecondWhoRVAdapter.kt	(revision 99780c6c70106d18888a2546cb17a4b3e28d09b8)
+++ b/app/src/main/java/com/eight/collection/ui/writing/second/who/WritesecondWhoRVAdapter.kt	(date 1647410896040)
@@ -46,6 +46,11 @@
 
     inner class ViewHolder(val binding: ItemWritesecondWhoBinding) : RecyclerView.ViewHolder(binding.root){
         fun bind(who: WritesecondWho, position: Int){
+            for(i in whoList){
+                if(i.focus == true){
+                    selectId = i.id
+                }
+            }
             binding.writesecondWhoTextButton.apply {
                 if(whoList[position].id < 7) {
                     text = who.name
Index: app/src/main/java/com/eight/collection/ui/writing/second/place/WritesecondPlaceFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.eight.collection.ui.writing.second.place\n\nimport android.os.Bundle\nimport android.os.Handler\nimport android.os.Looper\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.Toast\nimport androidx.fragment.app.Fragment\nimport com.eight.collection.data.remote.getaddedblock.GetAddedBlockResult\nimport com.eight.collection.data.remote.getaddedblock.GetAddedBlockService\nimport com.eight.collection.data.remote.modi.ModiResult\nimport com.eight.collection.data.remote.modi.ModiService\nimport com.eight.collection.databinding.FragmentWritesecondPlaceBinding\nimport com.eight.collection.ui.writing.CustomDialogInterface\nimport com.eight.collection.ui.writing.GetAddedBlockView\nimport com.eight.collection.ui.writing.ModiView\nimport com.eight.collection.ui.writing.first.AddedClothes\nimport com.eight.collection.ui.writing.first.FixedClothes\nimport com.eight.collection.ui.writing.first.WritefirstActivity\nimport com.eight.collection.ui.writing.first.top.WritefirstTopRVAdapter\nimport com.eight.collection.ui.writing.second.AddedPlace\nimport com.eight.collection.ui.writing.second.FixedPlace\nimport com.eight.collection.ui.writing.second.WritesecondActivity\nimport com.eight.collection.ui.writing.second.weather.WritesecondWeather\nimport com.google.android.flexbox.FlexboxLayoutManager\n\nclass WritesecondPlaceFragment : Fragment(), CustomDialogInterface,\n    WritesecondPlaceRVAdapter.PlaceClickListener, WritesecondActivity.GetPlaceDataListener ,\n    GetAddedBlockView, ModiView, WritesecondActivity.RefreshPlaceDataListener {\n    lateinit var binding : FragmentWritesecondPlaceBinding\n    private var placeDatas = ArrayList<WritesecondPlace>()\n    lateinit var customDialog: WritesecondPlaceCustomDialog\n    private var idcount : Int = 9\n    var placeRVAdapter : WritesecondPlaceRVAdapter = WritesecondPlaceRVAdapter(placeDatas)\n    var date : String = \"2021-01-01\"\n    var mode : Int = 1\n\n    override fun onCreateView(\n        inflater: LayoutInflater,\n        container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View? {\n        binding = FragmentWritesecondPlaceBinding.inflate(inflater,container,false)\n\n        // 데이터 리스트 생성\n        placeDatas.apply {\n            add(WritesecondPlace(\"+\", 0,0))\n            add(WritesecondPlace(\"학교\", 1,1))\n            add(WritesecondPlace(\"회사\", 2,2))\n            add(WritesecondPlace(\"헬스장\", 3,3))\n            add(WritesecondPlace(\"집\", 4,4))\n            add(WritesecondPlace(\"카페\", 5,5))\n            add(WritesecondPlace(\"결혼식장\", 6,6))\n            add(WritesecondPlace(\"핫플레이스\", 7,7))\n            add(WritesecondPlace(\"휴양지\", 8,8))\n        }\n\n        getAddedBlock()\n\n        mode = (activity as WritesecondActivity).mode\n        if(mode == 2) {\n            modi()\n        }\n\n        Handler(Looper.getMainLooper()).postDelayed({\n            placeRVAdapter = WritesecondPlaceRVAdapter(placeDatas)\n            placeRVAdapter.setPlaceClickListener(this)\n\n            val flexboxLayoutManager = FlexboxLayoutManager(activity)\n            binding.writesecondPlaceRecyclerview.adapter = placeRVAdapter\n            binding.writesecondPlaceRecyclerview.layoutManager = flexboxLayoutManager\n        }, 200)\n\n\n        return binding.root\n    }\n\n    override fun onAddButtonClicked(addText: String) {\n        placeDatas.apply {\n            add(WritesecondPlace(addText,idcount))\n            idcount += 1\n        }\n        placeRVAdapter.notifyDataSetChanged()\n    }\n\n    override fun onCancelButtonClicked() {\n    }\n\n    override fun plusButtonClick() {\n        customDialog = WritesecondPlaceCustomDialog(requireContext(), this)\n        customDialog.show()\n    }\n\n    override fun getFixedData(): ArrayList<Int> {\n        var fixedPlace = arrayListOf<Int>()\n        fixedPlace = placeRVAdapter.getRVAFixedData()\n        return fixedPlace\n    }\n\n    override fun getAddedData(): ArrayList<String> {\n        var addedPlace = arrayListOf<String>()\n        addedPlace = placeRVAdapter.getRVAAddedData()\n        return addedPlace\n    }\n\n    private fun getAddedBlock(){\n        GetAddedBlockService.getAddedBlock(this)\n    }\n\n    override fun onGetAddedBlockLoading() {\n\n    }\n\n    override fun onGetAddedBlockSuccess(getaddedblockresult: GetAddedBlockResult) {\n        if(getaddedblockresult.aplace != null) {\n            for (i in getaddedblockresult.aplace) {\n                placeDatas.apply {\n                    add(WritesecondPlace(i, idcount))\n                    idcount += 1\n                }\n            }\n            placeRVAdapter.notifyDataSetChanged()\n        }\n    }\n\n    override fun onGetAddedBlockFailure(code: Int, message: String) {\n    }\n\n    private fun modi(){\n        date = (activity as WritesecondActivity).modidate.toString()\n        ModiService.modi(this, date!!)\n    }\n\n    override fun onModiLoading() {\n    }\n\n    override fun onModiSuccess(modiresult: ModiResult) {\n        if(modiresult.selected?.place.isNullOrEmpty() == false){\n            for(i in placeDatas){\n                for(j in modiresult.selected?.place!!){\n                    if(i.name == j){\n                        i.apply{\n                            i.focus = true\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    override fun onModiFailure(code: Int, message: String) {\n    }\n\n    override fun refreshData() {\n        for(i in placeDatas){\n            i.apply{\n                i.focus = false\n            }\n        }\n        placeRVAdapter.notifyDataSetChanged()\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/eight/collection/ui/writing/second/place/WritesecondPlaceFragment.kt b/app/src/main/java/com/eight/collection/ui/writing/second/place/WritesecondPlaceFragment.kt
--- a/app/src/main/java/com/eight/collection/ui/writing/second/place/WritesecondPlaceFragment.kt	(revision 99780c6c70106d18888a2546cb17a4b3e28d09b8)
+++ b/app/src/main/java/com/eight/collection/ui/writing/second/place/WritesecondPlaceFragment.kt	(date 1647411055351)
@@ -72,7 +72,7 @@
             val flexboxLayoutManager = FlexboxLayoutManager(activity)
             binding.writesecondPlaceRecyclerview.adapter = placeRVAdapter
             binding.writesecondPlaceRecyclerview.layoutManager = flexboxLayoutManager
-        }, 200)
+        }, 300)
 
 
         return binding.root
Index: app/src/main/java/com/eight/collection/ui/writing/second/place/WritesecondPlaceRVAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.eight.collection.ui.writing.second.place\n\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.Toast\nimport androidx.core.content.ContentProviderCompat.requireContext\nimport androidx.recyclerview.widget.RecyclerView\nimport com.eight.collection.data.entities.Write.Block\nimport com.eight.collection.data.remote.deleteblock.DeleteBlockService\nimport com.eight.collection.databinding.ItemWritesecondPlaceBinding\nimport com.eight.collection.ui.writing.DeleteBlockView\nimport com.eight.collection.ui.writing.first.AddedClothes\nimport com.eight.collection.ui.writing.first.FixedClothes\nimport com.eight.collection.ui.writing.second.AddedPlace\nimport com.eight.collection.ui.writing.second.FixedPlace\n\nclass WritesecondPlaceRVAdapter(private val placeList: ArrayList<WritesecondPlace>) : RecyclerView.Adapter<WritesecondPlaceRVAdapter.ViewHolder>(), DeleteBlockView{\n    private var clickListener: PlaceClickListener? = null\n    private var count : Int = 0\n    private var selectId : Int = -1\n    private var beforeId : Int = -1\n\n    interface PlaceClickListener {\n        fun plusButtonClick()\n    }\n\n    fun setPlaceClickListener(placeClickListener: PlaceClickListener) {\n        this.clickListener = placeClickListener\n    }\n\n\n    override fun getItemCount(): Int = placeList.size\n\n    override fun onBindViewHolder(holder: ViewHolder, position: Int) {\n        holder.binding.writesecondPlaceTextButton.isChecked = placeList[position].focus\n        holder.bind(placeList[position],position)\n        holder.setIsRecyclable(false)\n    }\n\n\n    override fun onCreateViewHolder(viewGroup: ViewGroup, viewType: Int): ViewHolder {\n        val binding : ItemWritesecondPlaceBinding = ItemWritesecondPlaceBinding.inflate(LayoutInflater.from(viewGroup.context), viewGroup, false)\n        return ViewHolder(binding)\n    }\n\n\n    inner class ViewHolder(val binding: ItemWritesecondPlaceBinding) : RecyclerView.ViewHolder(binding.root){\n        fun bind(place: WritesecondPlace, position: Int){\n            binding.writesecondPlaceTextButton.apply {\n                if(placeList[position].id < 9) {\n                    text = place.name\n                }\n                else {\n                    text = place.name + \"    \"\n                }\n\n                setOnClickListener {\n                    when (placeList[position].id) {\n                        0 -> {\n                            clickListener?.plusButtonClick()\n                            isChecked = false\n                        }\n                        else -> {\n                            // 처음 선택시\n                            if (selectId == -1) {\n                                placeList[position].focus = true\n                                selectId = position\n                            }\n                            // 선택한거 다시 클릭시\n                            else if (selectId == position) {\n                                placeList[selectId].focus = false\n                                selectId = -1\n                            }\n                            // 선택한거말고 다른거 클릭시\n                            else {\n                                placeList[selectId].focus = false\n                                placeList[position].focus = true\n                                selectId = position\n                            }\n                        }\n                    }\n                    notifyDataSetChanged()\n                }\n            }\n            binding.writesecondPlaceDeleteButton.apply {\n                if (placeList[position].id < 9) {\n                    visibility = View.GONE\n                } else {\n                    visibility = View.VISIBLE\n                    setOnClickListener{\n                        when (placeList[position].id){\n                            0 -> {}\n                            else -> {\n                                removeItem(position)\n                                if(position == selectId){\n                                    selectId = -1\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // 데이터 추가 메소드 (데이터 및 삭제아이콘 추가)\n    fun addItem(place: WritesecondPlace){\n        placeList.add(place)\n        notifyDataSetChanged()\n    }\n\n    // 데이터 삭제 메소드\n    fun removeItem(position: Int){\n        deleteBlock(placeList[position].name.toString())\n        placeList.removeAt(position)\n        notifyDataSetChanged()\n    }\n\n    private fun getBlock(content : String) : Block {\n        val clothes : Int = -1\n        val pww : Int = 0\n        return Block(clothes,pww,content)\n    }\n\n    private fun deleteBlock(content : String) {\n        DeleteBlockService.deleteBlock(this, getBlock(content))\n    }\n\n    override fun onDeleteBlockLoading() {\n\n    }\n\n    override fun onDeleteBlockSuccess() {\n        Log.d(\"message\",\"Delete Success\")\n    }\n\n    override fun onDeleteBlockFailure(code: Int, message: String) {\n        when(code) {\n            4006, 4007 -> {\n                Log.d(\"message\",message)\n            }\n            else -> {\n                Log.d(\"message\",\"SERVER ERROR\")\n            }\n        }\n    }\n\n    fun getRVAFixedData() : ArrayList<Int> {\n        val fixedPlace = arrayListOf<Int>()\n        for(i in placeList){\n            if(i.id < 9){\n                if(i.focus == true){\n                    fixedPlace.apply{\n                        add(i.index)\n                    }\n                }\n            }\n        }\n        return fixedPlace\n    }\n\n    fun getRVAAddedData() : ArrayList<String> {\n        val addedPlace = arrayListOf<String>()\n        for(i in placeList) {\n            if (i.id > 8) {\n                if (i.focus == true) {\n                    addedPlace.apply {\n                        add(i.name)\n                    }\n                }\n            }\n        }\n        return addedPlace\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/eight/collection/ui/writing/second/place/WritesecondPlaceRVAdapter.kt b/app/src/main/java/com/eight/collection/ui/writing/second/place/WritesecondPlaceRVAdapter.kt
--- a/app/src/main/java/com/eight/collection/ui/writing/second/place/WritesecondPlaceRVAdapter.kt	(revision 99780c6c70106d18888a2546cb17a4b3e28d09b8)
+++ b/app/src/main/java/com/eight/collection/ui/writing/second/place/WritesecondPlaceRVAdapter.kt	(date 1647410819222)
@@ -22,6 +22,14 @@
     private var selectId : Int = -1
     private var beforeId : Int = -1
 
+    /*fun setselectedId() {
+        for(i in placeList){
+            if(i.focus == true){
+                selectId = i.id
+            }
+        }
+    }*/
+
     interface PlaceClickListener {
         fun plusButtonClick()
     }
@@ -49,6 +57,11 @@
     inner class ViewHolder(val binding: ItemWritesecondPlaceBinding) : RecyclerView.ViewHolder(binding.root){
         fun bind(place: WritesecondPlace, position: Int){
             binding.writesecondPlaceTextButton.apply {
+                for(i in placeList){
+                    if(i.focus == true){
+                        selectId = i.id
+                    }
+                }
                 if(placeList[position].id < 9) {
                     text = place.name
                 }
Index: app/src/main/java/com/eight/collection/ui/writing/second/weather/WritesecondWeatherRVAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.eight.collection.ui.writing.second.weather\n\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.recyclerview.widget.RecyclerView\nimport com.eight.collection.data.entities.Write.Block\nimport com.eight.collection.data.remote.deleteblock.DeleteBlockService\nimport com.eight.collection.databinding.ItemWritesecondPlaceBinding\nimport com.eight.collection.databinding.ItemWritesecondWeatherBinding\nimport com.eight.collection.ui.writing.DeleteBlockView\nimport com.eight.collection.ui.writing.second.AddedPlace\nimport com.eight.collection.ui.writing.second.AddedWeather\nimport com.eight.collection.ui.writing.second.FixedPlace\nimport com.eight.collection.ui.writing.second.FixedWeather\n\nclass WritesecondWeatherRVAdapter(private val weatherList: ArrayList<WritesecondWeather>) : RecyclerView.Adapter<WritesecondWeatherRVAdapter.ViewHolder>(), DeleteBlockView{\n    private var clickListener: WeatherClickListener? = null\n    private var count : Int = 0\n    private var selectId : Int = -1\n    private var beforeId : Int = -1\n\n    interface WeatherClickListener {\n        fun plusButtonClick()\n    }\n\n    fun setWeatherClickListener(weatherClickListener: WeatherClickListener) {\n        this.clickListener = weatherClickListener\n    }\n\n\n    override fun onCreateViewHolder(viewGroup: ViewGroup, viewType: Int): ViewHolder {\n        val binding : ItemWritesecondWeatherBinding = ItemWritesecondWeatherBinding.inflate(LayoutInflater.from(viewGroup.context), viewGroup, false)\n        return ViewHolder(binding)\n    }\n\n    override fun onBindViewHolder(holder: ViewHolder, position: Int) {\n        holder.binding.writesecondWeatherTextButton.isChecked = weatherList[position].focus\n        holder.bind(weatherList[position],position)\n        holder.setIsRecyclable(false)\n    }\n\n    override fun getItemCount(): Int = weatherList.size\n\n\n    inner class ViewHolder(val binding: ItemWritesecondWeatherBinding) : RecyclerView.ViewHolder(binding.root){\n        fun bind(weather: WritesecondWeather, position: Int){\n            binding.writesecondWeatherTextButton.apply {\n                if(weatherList[position].id < 9) {\n                    text = weather.name\n                }\n                else {\n                    text = weather.name + \"    \"\n                }\n                // select 여부 확인 및 상태 변경\n                setOnClickListener {\n                    when (weatherList[position].id) {\n                        0 -> {\n                            clickListener?.plusButtonClick()\n                            isChecked = false\n                        }\n                        else -> {\n                            // 처음 선택시\n                            if (selectId == -1) {\n                                weatherList[position].focus = true\n                                selectId = position\n                            }\n                            // 선택한거 다시 클릭시\n                            else if (selectId == position) {\n                                weatherList[selectId].focus = false\n                                selectId = -1\n                            }\n                            // 선택한거말고 다른거 클릭시\n                            else {\n                                weatherList[selectId].focus = false\n                                weatherList[position].focus = true\n                                selectId = position\n                            }\n                        }\n                    }\n                    notifyDataSetChanged()\n                }\n            }\n            binding.writesecondWeatherDeleteButton.apply {\n                if (weatherList[position].id < 9) {\n                    visibility = View.GONE\n                } else {\n                    visibility = View.VISIBLE\n                    setOnClickListener{\n                        when (weatherList[position].id){\n                            0 -> {}\n                            else -> {\n                                removeItem(position)\n                                if(position == selectId){\n                                    selectId = -1\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // 데이터 추가 메소드 (데이터 및 삭제아이콘 추가)\n    fun addItem(weather: WritesecondWeather){\n        weatherList.add(weather)\n        notifyDataSetChanged()\n    }\n\n    // 데이터 삭제 메소드\n    fun removeItem(position: Int){\n        deleteBlock(weatherList[position].name.toString())\n        weatherList.removeAt(position)\n        notifyDataSetChanged()\n    }\n\n    private fun getBlock(content : String) : Block {\n        val clothes : Int = -1\n        val pww : Int = 1\n        return Block(clothes,pww,content)\n    }\n\n    private fun deleteBlock(content : String) {\n        DeleteBlockService.deleteBlock(this, getBlock(content))\n    }\n\n    override fun onDeleteBlockLoading() {\n\n    }\n\n    override fun onDeleteBlockSuccess() {\n        Log.d(\"message\",\"Delete Success\")\n    }\n\n    override fun onDeleteBlockFailure(code: Int, message: String) {\n        when(code) {\n            4006, 4007 -> {\n                Log.d(\"message\",message)\n            }\n            else -> {\n                Log.d(\"message\",\"SERVER ERROR\")\n            }\n        }\n    }\n\n    fun getRVAFixedData() : ArrayList<Int> {\n        val fixedWeather = arrayListOf<Int>()\n        for(i in weatherList){\n            if(i.id < 9){\n                if(i.focus == true){\n                    fixedWeather.apply{\n                        add(i.index)\n                    }\n                }\n            }\n        }\n        return fixedWeather\n    }\n\n    fun getRVAAddedData() : ArrayList<String> {\n        val addedWeather = arrayListOf<String>()\n        for(i in weatherList) {\n            if (i.id > 8) {\n                if (i.focus == true) {\n                    addedWeather.apply {\n                        add(i.name)\n                    }\n                }\n            }\n        }\n        return addedWeather\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/eight/collection/ui/writing/second/weather/WritesecondWeatherRVAdapter.kt b/app/src/main/java/com/eight/collection/ui/writing/second/weather/WritesecondWeatherRVAdapter.kt
--- a/app/src/main/java/com/eight/collection/ui/writing/second/weather/WritesecondWeatherRVAdapter.kt	(revision 99780c6c70106d18888a2546cb17a4b3e28d09b8)
+++ b/app/src/main/java/com/eight/collection/ui/writing/second/weather/WritesecondWeatherRVAdapter.kt	(date 1647410911511)
@@ -46,6 +46,11 @@
 
     inner class ViewHolder(val binding: ItemWritesecondWeatherBinding) : RecyclerView.ViewHolder(binding.root){
         fun bind(weather: WritesecondWeather, position: Int){
+            for(i in weatherList){
+                if(i.focus == true){
+                    selectId = i.id
+                }
+            }
             binding.writesecondWeatherTextButton.apply {
                 if(weatherList[position].id < 9) {
                     text = weather.name
Index: app/src/main/java/com/eight/collection/ui/writing/second/weather/WritesecondWeatherFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.eight.collection.ui.writing.second.weather\n\nimport android.os.Bundle\nimport android.os.Handler\nimport android.os.Looper\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.Toast\nimport androidx.fragment.app.Fragment\nimport com.eight.collection.data.remote.getaddedblock.GetAddedBlockResult\nimport com.eight.collection.data.remote.getaddedblock.GetAddedBlockService\nimport com.eight.collection.data.remote.modi.ModiResult\nimport com.eight.collection.data.remote.modi.ModiService\nimport com.eight.collection.databinding.FragmentWritesecondWeatherBinding\nimport com.eight.collection.ui.writing.CustomDialogInterface\nimport com.eight.collection.ui.writing.GetAddedBlockView\nimport com.eight.collection.ui.writing.ModiView\nimport com.eight.collection.ui.writing.second.*\nimport com.eight.collection.ui.writing.second.place.WritesecondPlace\nimport com.eight.collection.ui.writing.second.place.WritesecondPlaceCustomDialog\nimport com.eight.collection.ui.writing.second.place.WritesecondPlaceRVAdapter\nimport com.eight.collection.ui.writing.second.who.WritesecondWho\nimport com.google.android.flexbox.FlexboxLayoutManager\n\nclass WritesecondWeatherFragment : Fragment(), CustomDialogInterface,\n    WritesecondWeatherRVAdapter.WeatherClickListener, WritesecondActivity.GetWeatherDataListener,\n    GetAddedBlockView, ModiView, WritesecondActivity.RefreshWeatherDataListener {\n    lateinit var binding : FragmentWritesecondWeatherBinding\n    private var weatherDatas = ArrayList<WritesecondWeather>()\n    lateinit var customDialog: WritesecondWeatherCustomDialog\n    private var idcount : Int = 9\n    var weatherRVAdapter : WritesecondWeatherRVAdapter = WritesecondWeatherRVAdapter(weatherDatas)\n    var date : String = \"2021-01-01\"\n    var mode : Int = 1\n\n    override fun onCreateView(\n        inflater: LayoutInflater,\n        container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View? {\n        binding = FragmentWritesecondWeatherBinding.inflate(inflater,container,false)\n\n        // 데이터 리스트 생성\n        weatherDatas.apply {\n            add(WritesecondWeather(\"+\", 0,0))\n            add(WritesecondWeather(\"매우추움\", 1,1))\n            add(WritesecondWeather(\"매우더움\", 2,2))\n            add(WritesecondWeather(\"추움\", 3,3))\n            add(WritesecondWeather(\"더움\", 4,4))\n            add(WritesecondWeather(\"적당함\", 5,5))\n            add(WritesecondWeather(\"눈\", 6,6))\n            add(WritesecondWeather(\"비\", 7,7))\n            add(WritesecondWeather(\"우박\", 8,8))\n        }\n\n        getAddedBlock()\n\n        mode = (activity as WritesecondActivity).mode\n        if(mode == 2) {\n            modi()\n        }\n\n        Handler(Looper.getMainLooper()).postDelayed({\n            weatherRVAdapter = WritesecondWeatherRVAdapter(weatherDatas)\n            weatherRVAdapter.setWeatherClickListener(this)\n\n            val flexboxLayoutManager = FlexboxLayoutManager(activity)\n            binding.writesecondWeatherRecyclerview.adapter = weatherRVAdapter\n            binding.writesecondWeatherRecyclerview.layoutManager = flexboxLayoutManager\n        }, 200)\n\n        return binding.root\n    }\n\n    override fun onAddButtonClicked(addText: String) {\n        weatherDatas.apply {\n            add(WritesecondWeather(addText,idcount))\n            idcount += 1\n        }\n\n        weatherRVAdapter.notifyDataSetChanged()\n    }\n\n    override fun onCancelButtonClicked() {\n    }\n\n    override fun plusButtonClick() {\n        customDialog = WritesecondWeatherCustomDialog(requireContext(), this)\n        customDialog.show()\n    }\n\n    override fun getFixedData(): ArrayList<Int> {\n        var fixedWeather = arrayListOf<Int>()\n        fixedWeather = weatherRVAdapter.getRVAFixedData()\n        return fixedWeather\n    }\n\n    override fun getAddedData(): ArrayList<String> {\n        var addedWeather = arrayListOf<String>()\n        addedWeather = weatherRVAdapter.getRVAAddedData()\n        return addedWeather\n    }\n\n    private fun getAddedBlock(){\n        GetAddedBlockService.getAddedBlock(this)\n    }\n\n    override fun onGetAddedBlockLoading() {\n    }\n\n    override fun onGetAddedBlockSuccess(getaddedblockresult: GetAddedBlockResult) {\n        if(getaddedblockresult.aweather != null) {\n            for (i in getaddedblockresult.aweather) {\n                weatherDatas.apply {\n                    add(WritesecondWeather(i, idcount))\n                    idcount += 1\n                }\n            }\n            weatherRVAdapter.notifyDataSetChanged()\n        }\n    }\n\n    override fun onGetAddedBlockFailure(code: Int, message: String) {\n    }\n\n    private fun modi(){\n        date = (activity as WritesecondActivity).modidate.toString()\n        ModiService.modi(this, date!!)\n    }\n\n    override fun onModiLoading() {\n    }\n\n    override fun onModiSuccess(modiresult: ModiResult) {\n        if(modiresult.selected?.weather.isNullOrEmpty() == false){\n            for(i in weatherDatas){\n                for(j in modiresult.selected?.weather!!){\n                    if(i.name == j){\n                        i.apply{\n                            i.focus = true\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    override fun onModiFailure(code: Int, message: String) {\n    }\n\n    override fun refreshData() {\n        for(i in weatherDatas){\n            i.apply{\n                i.focus = false\n            }\n        }\n        weatherRVAdapter.notifyDataSetChanged()\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/eight/collection/ui/writing/second/weather/WritesecondWeatherFragment.kt b/app/src/main/java/com/eight/collection/ui/writing/second/weather/WritesecondWeatherFragment.kt
--- a/app/src/main/java/com/eight/collection/ui/writing/second/weather/WritesecondWeatherFragment.kt	(revision 99780c6c70106d18888a2546cb17a4b3e28d09b8)
+++ b/app/src/main/java/com/eight/collection/ui/writing/second/weather/WritesecondWeatherFragment.kt	(date 1647411055347)
@@ -69,7 +69,7 @@
             val flexboxLayoutManager = FlexboxLayoutManager(activity)
             binding.writesecondWeatherRecyclerview.adapter = weatherRVAdapter
             binding.writesecondWeatherRecyclerview.layoutManager = flexboxLayoutManager
-        }, 200)
+        }, 300)
 
         return binding.root
     }
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"DesignSurface\">\n    <option name=\"filePathToZoomLevelMap\">\n      <map>\n        <entry key=\"..\\:/Users/gypig/.gradle/caches/transforms-3/33e2382e2a4b05258454807d965391b6/transformed/appcompat-1.4.1/res/drawable/abc_ic_menu_copy_mtrl_am_alpha.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable-hdpi/logout_cancle_btn_event.xml\" value=\"0.17708333333333334\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable-hdpi/logout_ok_btn_event.xml\" value=\"0.17708333333333334\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable-hdpi/week_datepicker__ok_btn_event.xml\" value=\"0.17708333333333334\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable-hdpi/week_datepicker_cancle_btn_event.xml\" value=\"0.17708333333333334\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable-hdpi/week_datepicker_ok_btn_event.xml\" value=\"0.17\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable-mdpi/mylook_second_img_bg.xml\" value=\"0.12407407407407407\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable-v24/change_btn_event.xml\" value=\"0.17708333333333334\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable-v24/edit_btn_event.xml\" value=\"0.17708333333333334\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable-v24/nickname_btn.xml\" value=\"0.17708333333333334\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable-v24/nickname_btn_ac.xml\" value=\"0.17708333333333334\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable-v24/nickname_btn_event.xml\" value=\"0.17708333333333334\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable-v24/nickname_edit_round.xml\" value=\"0.17708333333333334\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable-v24/radio_selected.xml\" value=\"0.17\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable-v24/radio_selector.xml\" value=\"0.17\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable-v24/secssion_btn_event.xml\" value=\"0.17708333333333334\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable-v24/week_diary_img_bg.xml\" value=\"0.1328125\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable-v24/week_diary_mood_round.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable-v24/week_diary_round_text.xml\" value=\"0.14912280701754385\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable-v24/weel_diary_round_text.xml\" value=\"0.1328125\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable-xxhdpi/signup_btn_event.xml\" value=\"0.17708333333333334\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable/dialog_round.xml\" value=\"0.17708333333333334\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable/login_btn_event.xml\" value=\"0.17708333333333334\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable/ripple_button.xml\" value=\"0.12916666666666668\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable/ripple_effect.xml\" value=\"0.17708333333333334\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable/roundshape_button.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable/selector_navi_week.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable/signup_btn_event_first.xml\" value=\"0.10833333333333334\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable/signup_btn_event_third.xml\" value=\"0.10833333333333334\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable/toast_signup_shape.xml\" value=\"0.1115\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/drawable/week_datepicker_round.xml\" value=\"0.1398148148148148\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/font/noto_sans_kr.xml\" value=\"0.17314814814814813\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/font/noto_sans_light.xml\" value=\"0.12685185185185185\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/font/roboto_light.xml\" value=\"0.15683760683760684\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/font/vlan_llaoutline.xml\" value=\"0.19114583333333332\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout-v28/activity_mail.xml\" value=\"0.1609375\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout-v28/date_picker_caledaer_day.xml\" value=\"0.14666666666666667\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout-v28/date_picker_calendar_date.xml\" value=\"0.14666666666666667\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout-v28/dialog_edit_delete_custom.xml\" value=\"0.22\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout-v28/dialog_introduce_second.xml\" value=\"0.1609375\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout-v28/week_datepicker.xml\" value=\"0.16666666666666666\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_account_delete.xml\" value=\"0.16666666666666666\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_account_delete_second.xml\" value=\"0.4201474201474201\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_add_bottomtag.xml\" value=\"0.1609375\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_add_toptag.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_add_weathertag.xml\" value=\"0.1609375\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_developer_info.xml\" value=\"0.22\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_finish.xml\" value=\"0.22\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_info_edit.xml\" value=\"0.16666666666666666\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_login.xml\" value=\"0.1609375\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_login_first.xml\" value=\"0.16666666666666666\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_login_second.xml\" value=\"0.3333333333333333\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_main.xml\" value=\"0.13999999999999999\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_my_look.xml\" value=\"0.22\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_my_look_second.xml\" value=\"0.1609375\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_nickname_edit.xml\" value=\"0.22\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_phone_number_edit.xml\" value=\"0.22\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_privacy_rule.xml\" value=\"0.3333333333333333\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_pw_edit.xml\" value=\"0.22\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_setting.xml\" value=\"0.22\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_signup_first.xml\" value=\"0.1609375\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_signup_second.xml\" value=\"0.1609375\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_signup_third.xml\" value=\"0.22\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_splash.xml\" value=\"0.5\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_writefirst.xml\" value=\"0.16666666666666666\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/activity_writesecond.xml\" value=\"0.16666666666666666\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/caledaer_day.xml\" value=\"0.22\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/calendar_date.xml\" value=\"0.14666666666666667\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/calendar_year_month_header.xml\" value=\"0.3333333333333333\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/calendar_year_month_header_week.xml\" value=\"0.5\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/date_picker_calendar_year_month_header.xml\" value=\"0.16666666666666666\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/dialog_logout_custom.xml\" value=\"0.3333333333333333\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/dim_background.xml\" value=\"0.1140625\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/fragment_look_point.xml\" value=\"0.13333333333333333\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/fragment_match.xml\" value=\"0.1609375\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/fragment_month.xml\" value=\"0.16666666666666666\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/fragment_my_look.xml\" value=\"0.22\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/fragment_my_look_banner.xml\" value=\"0.3333333333333333\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/fragment_my_look_second.xml\" value=\"0.22\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/fragment_week.xml\" value=\"0.16666666666666666\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/fragment_writefirst_top.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/fragment_writesecond_place.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/item_finish_photo.xml\" value=\"0.1355263157894737\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/item_look_point.xml\" value=\"0.22\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/item_look_point_photo.xml\" value=\"0.3333333333333333\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/item_my_look.xml\" value=\"0.22\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/item_my_look_photo.xml\" value=\"0.1609375\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/item_my_look_second_photo.xml\" value=\"0.5\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/item_week_diary.xml\" value=\"0.3333333333333333\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/item_week_diary_cloth_color.xml\" value=\"1.3333333333333333\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/item_week_diary_mood.xml\" value=\"0.6038961038961039\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/item_writefirst_bottom.xml\" value=\"0.12760416666666666\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/item_writefirst_photo.xml\" value=\"0.1609375\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/item_writefirst_top.xml\" value=\"0.1609375\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/toast_custom.xml\" value=\"0.16666666666666666\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/toast_signup.xml\" value=\"0.16666666666666666\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/layout/week_datepicker.xml\" value=\"0.22\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/menu/menu_week_option.xml\" value=\"0.22\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/menu/navi_menu.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml\" value=\"0.1135\" />\n        <entry key=\"..\\:/Users/gypig/Documents/COLLECTION/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml\" value=\"0.1135\" />\n        <entry key=\"app/src/main/res/font/noto_sans_kr.xml\" value=\"0.23055555555555557\" />\n        <entry key=\"app/src/main/res/layout/activity_developer_info.xml\" value=\"0.25\" />\n        <entry key=\"app/src/main/res/layout/activity_info_edit.xml\" value=\"0.25\" />\n        <entry key=\"app/src/main/res/layout/activity_pw_edit.xml\" value=\"0.25\" />\n        <entry key=\"app/src/main/res/layout/activity_setting.xml\" value=\"0.1\" />\n        <entry key=\"app/src/main/res/layout/activity_writefirst.xml\" value=\"0.25\" />\n        <entry key=\"app/src/main/res/layout/activity_writesecond.xml\" value=\"0.25\" />\n        <entry key=\"app/src/main/res/layout/fragment_week.xml\" value=\"0.25\" />\n        <entry key=\"app/src/main/res/layout/item_finish_photo.xml\" value=\"0.11828774062816616\" />\n        <entry key=\"app/src/main/res/layout/item_my_look_photo.xml\" value=\"0.10462962962962963\" />\n        <entry key=\"app/src/main/res/layout/item_week_diary.xml\" value=\"0.375\" />\n        <entry key=\"app/src/main/res/layout/item_writefirst_photo.xml\" value=\"0.10462962962962963\" />\n      </map>\n    </option>\n  </component>\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"Android Studio default JDK\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\n  </component>\n  <component name=\"ProjectType\">\n    <option name=\"id\" value=\"Android\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 99780c6c70106d18888a2546cb17a4b3e28d09b8)
+++ b/.idea/misc.xml	(date 1647413364966)
@@ -108,7 +108,7 @@
         <entry key="app/src/main/res/layout/activity_developer_info.xml" value="0.25" />
         <entry key="app/src/main/res/layout/activity_info_edit.xml" value="0.25" />
         <entry key="app/src/main/res/layout/activity_pw_edit.xml" value="0.25" />
-        <entry key="app/src/main/res/layout/activity_setting.xml" value="0.1" />
+        <entry key="app/src/main/res/layout/activity_setting.xml" value="0.25" />
         <entry key="app/src/main/res/layout/activity_writefirst.xml" value="0.25" />
         <entry key="app/src/main/res/layout/activity_writesecond.xml" value="0.25" />
         <entry key="app/src/main/res/layout/fragment_week.xml" value="0.25" />
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\n    <string name=\"app_name\">Collection</string>\n    <!--공통-->\n    <string name=\"img_app_logo\">logo image</string>\n    <string name=\"ic_back\">back icon</string>\n    <string name=\"splash_ootd_diary\">ootd calendar</string>\n    <string name=\"splash_collection\">collection</string>\n\n\n    <!--메뉴-->\n    <string name=\"menu_month\">월별</string>\n    <string name=\"menu_week\">주별</string>\n    <string name=\"menu_matching\">매칭</string>\n\n    <!--에러처리-->\n    <string name=\"default_fail\">네트워크연결이 원활하지 않습니다</string>\n\n    <!-- 로그인 -->\n    <string name=\"login\">로그인</string>\n    <string name=\"login_first_title\">나만을 위한</string>\n    <string name=\"login_second_title\">OOTD 캘린더</string>\n    <string name=\"login_third_title\">콜렉션은 나만의 OOTD를 작성기록 앱입니다.</string>\n    <string name=\"login_welcome_first_title\">언제나</string>\n    <string name=\"login_welcome_second_title\">반가워요 8:-)</string>\n    <string name=\"login_id_hint\">아이디를 입력해주세요.</string>\n    <string name=\"login_pw_hint\">비밀번호를 입력해주세요.</string>\n    <string name=\"login_email_delimiter\">\\@</string>\n    <string name=\"login_name_hint\">이름</string>\n    <string name=\"login_signup\">회원가입</string>\n\n    <!-- 회원가입 -->\n    <string name=\"signup\">회원가입</string>\n    <string name=\"signup_id_hint\">아이디(이메일)</string>\n    <string name=\"signup_email_hint\">직접입력</string>\n    <string name=\"signup_email_delimiter\">\\@</string>\n    <string name=\"signup_name_hint\">이름</string>\n    <string name=\"signup_password_hint\">비밀번호</string>\n    <string name=\"signup_password_confirm_hint\">비밀번호 확인</string>\n\n    <!-- 분위기 -->\n    <string name=\"weather\">Weather.</string>\n    <string name=\"plcae\">Place.</string>\n    <string name=\"who\">Who.</string>\n    <string name=\"top\">Top.</string>\n    <string name=\"bottom\">Bottom.</string>\n    <string name=\"shoes\">Shoes.</string>\n    <string name=\"etc\">Etc.</string>\n    <string name=\"weekly_default\">해당 항목 없음</string>\n\n    <!-- developerInfo page -->\n    <string name=\"team_name\">8:-)</string>\n    <string name=\"leader_role\">PROJECT\\nMANAGER</string>\n    <string name=\"leader_name\">이프</string>\n    <string name=\"design_role\">UI/UX\\nDESIGNER</string>\n    <string name=\"design_name\">니제이</string>\n    <string name=\"android_role\">ANDROID</string>\n    <string name=\"android_name1\">테오</string>\n    <string name=\"android_name2\">라프</string>\n    <string name=\"server_role\">SERVER</string>\n    <string name=\"server_name1\">써니</string>\n    <string name=\"server_name2\">녜</string>\n    <!-- setting page -->\n    <string name=\"setting_back\">설정</string>\n    <string name=\"id\">collection</string>\n    <string name=\"id_title\">아이디</string>\n    <string name=\"nickname_title\">이름</string>\n    <string name=\"nickname\">콜렉션짱짱</string>\n    <string name=\"nickname_support\">님</string>\n    <string name=\"nickname_edit\">닉네임 변경</string>\n    <string name=\"nickname_edit_title\">닉네임을 변경하세요</string>\n    <string name=\"phone_number_edit_title\">휴대폰번호를 변경하세요</string>\n    <string name=\"pw_edit_title\">비밀번호를 변경하세요</string>\n    <string name=\"phone_number_annotaion\">\\'-\\'를 제외하고 입력해주세요.</string>\n    <string name=\"info_edit\">회원정보 수정</string>\n    <string name=\"phone_number_edit\">휴대폰번호 변경</string>\n    <string name=\"pw_length_check\">6~15자리를 입력해주세요.</string>\n    <string name=\"pw_origin\">기존 비밀번호</string>\n    <string name=\"pw_new\">새 비밀번호</string>\n    <string name=\"pw_new_check\">새 비밀번호 확인</string>\n    <string name=\"pw_edit\">비밀번호 변경</string>\n    <string name=\"delete_account\">회원탈퇴</string>\n    <string name=\"developer_info\">개발자 정보</string>\n    <string name=\"privacy_rule\">개인정보 취급방침</string>\n    <string name=\"mail\">문의하기</string>\n    <string name=\"logout\">로그아웃</string>\n    <string name=\"app_version\">v.1.0.0</string>\n    <string name=\"nickname_annotation\">콜렉션에서 사용할 닉네임을 입력해주세요.</string>\n\n    <!-- myLook page -->\n    <string name=\"mybest\">MY BEST</string>\n    <string name=\"lookbook\">LOOK BOOK</string>\n\n    <!-- dialog page -->\n    <string name=\"dialog_text\">로그아웃 하시겠습니까?</string>\n    <string name=\"dialog_text1\">해당 날짜의 OOTD</string>\n    <string name=\"dialog_text2\">검색 결과를 찾을 수 없습니다.</string>\n    <string name=\"lookpoint_error\">해당 룩 포인트의 OOTD가 존재하지 않습니다.</string>\n    <string name=\"lookpoint_error1\">해당 룩 포인트의</string>\n    <string name=\"lookpoint_error2\">OOTD가 존재하지 않습니다.</string>\n    <string name=\"dialog_text3\">수정하기</string>\n    <string name=\"dialog_text4\">삭제하기</string>\n\n    <!-- privacy page -->\n    <string name=\"privacy_first_title\">*&lt; COLLECTION &gt;(‘www.collection-ootd.shop’이하 ‘COLLECTION’)*은(는) 「개인정보 보호법」 제30조에 따라 정보주체의 개인정보를 보호하고 이와 관련한 고충을 신속하고 원활하게 처리할 수 있도록 하기 위하여 다음과 같이 개인정보 처리방침을 수립·공개합니다.\\n○ 이 개인정보처리방침은 2022년 2월 12일부터 적용됩니다.</string>\n    <string name=\"privacy_first_text\">제1조(개인정보의 처리 목적)</string>\n    <string name=\"privacy_first_1_text\">&lt; COLLECTION &gt;(‘www.collection-ootd.shop’이하 ‘COLLECTION’)*은(는) 다음의 목적을 위하여 개인정보를 처리합니다. 처리하고 있는 개인정보는 다음의 목적 이외의 용도로는 이용되지 않으며 이용 목적이 변경되는 경우에는 「개인정보 보호법」 제18조에 따라 별도의 동의를 받는 등 필요한 조치를 이행할 예정입니다.</string>\n    <string name=\"privacy_first_2_text\">1. 홈페이지 회원가입 및 관리\\n회원 가입의사 확인, 회원제 서비스 제공에 따른 본인 식별·인증, 회원자격 유지·관리, 서비스 부정이용 방지, 각종 고지·통지 목적으로 개인정보를 처리합니다.\\n\\n2. 민원사무 처리\\n민원인의 신원 확인, 민원사항 확인, 사실조사를 위한 연락·통지, 처리결과 통보 목적으로 개인정보를 처리합니다.\\n\\n3. 재화 또는 서비스 제공\\n서비스 제공, 맞춤서비스 제공을 목적으로 개인정보를 처리합니다.\\n\\n4. 마케팅 및 광고에의 활용\\n신규 서비스(제품) 개발 및 맞춤 서비스 제공, 서비스의 유효성 확인, 접속빈도 파악 또는 회원의 서비스 이용에 대한 통계 등을 목적으로 개인정보를 처리합니다.\\n</string>\n    <string name=\"privacy_second_text\">제2조(개인정보의 처리 및 보유 기간)</string>\n    <string name=\"privacy_second_1_text\">① &lt; COLLECTION &gt;은(는) 법령에 따른 개인정보 보유·이용기간 또는 정보주체로부터 개인정보를 수집 시에 동의받은 개인정보 보유·이용기간 내에서 개인정보를 처리·보유합니다.\\n\\n② 각각의 개인정보 처리 및 보유 기간은 다음과 같습니다.</string>\n    <string name=\"privacy_second_2_text\">1.&lt;홈페이지 회원가입 및 관리&gt;\\n&lt;홈페이지 회원가입 및 관리&gt;와 관련한 개인정보는 수집.이용에 관한 동의일로부터&lt;3년&gt;까지 위 이용목적을 위하여 보유.이용됩니다.\\n\\n보유근거 :\\n 회원 가입의사 확인, 회원자격 유지및 관리, 서비스 부정이용 방지, 각종 고지및 통지 목적으로 개인정보를 처리합니다.\\n\\n관련법령 :\\n1)신용정보의 수집/처리 및 이용 등에 관한 기록 : 3년\\n2)표시/광고에 관한 기록 : 6개월\\n\\n2.&lt;민원사무 처리&gt;\\n&lt;민원사무 처리&gt;와 관련한 개인정보는 수집.이용에 관한 동의일로부터&lt;3년&gt;까지 위 이용목적을 위하여 보유.이용됩니다.\\n\\n보유근거 :\\n 민원인의 신원 확인, 민원사항 확인, 사실조사를 위한 연락·통지, 처리결과 통보 목적으로 개인정보를 처리합니다.\\n\\n관련법령 :\\n1)신용정보의 수집/처리 및 이용 등에 관한 기록 : 3년\\n2)소비자의 불만 또는 분쟁처리에 관한 기록 : 3년\\n\\n3.&lt;재화 또는 서비스 제공&gt;\\n&lt;재화 또는 서비스 제공&gt;와 관련한 개인정보는 수집.이용에 관한 동의일로부터&lt;3년&gt;까지 위 이용목적을 위하여 보유.이용됩니다.\\n\\n보유근거 :\\n 서비스 제공, 맞춤서비스 제공을 목적으로 개인정보를 처리합니다.\\n\\n관련법령 :\\n 신용정보의 수집/처리 및 이용 등에 관한 기록 : 3년\\n\\n4.&lt;마케팅 및 광고에의 활용&gt;\\n&lt;마케팅 및 광고에의 활용&gt;와 관련한 개인정보는 수집.이용에 관한 동의일로부터&lt;3년&gt;까지 위 이용목적을 위하여 보유.이용됩니다.\\n\\n보유근거 :\\n 신규 서비스(제품) 개발 및 맞춤 서비스 제공, 서비스의 유효성 확인, 접속빈도 파악 또는 회원의 서비스 이용에 대한 통계 등을 목적으로 개인정보를 처리합니다.\\n\\n관련법령 :\\n1)신용정보의 수집/처리 및 이용 등에 관한 기록 : 3년\\n2)소비자의 불만 또는 분쟁처리에 관한 기록 : 3년\\n3)대금결제 및 재화 등의 공급에 관한 기록 : 5년</string>\n    <string name=\"privacy_third_text\">제3조(정보주체와 법정대리인의 권리·의무 및 그 행사방법)</string>\n    <string name=\"privacy_third_1_text\">① 정보주체는 COLLECTION에 대해 언제든지 개인정보 열람·정정·삭제·처리정지 요구 등의 권리를 행사할 수 있습니다.\\n\\n② 제1항에 따른 권리 행사는COLLECTION에 대해 「개인정보 보호법」 시행령 제41조제1항에 따라 서면, 전자우편, 모사전송(FAX) 등을 통하여 하실 수 있으며 COLLECTION은(는) 이에 대해 지체 없이 조치하겠습니다.\\n\\n③ 제1항에 따른 권리 행사는 정보주체의 법정대리인이나 위임을 받은 자 등 대리인을 통하여 하실 수 있습니다.이 경우 “개인정보 처리 방법에 관한 고시(제2020-7호)” 별지 제11호 서식에 따른 위임장을 제출하셔야 합니다.\\n\\n④ 개인정보 열람 및 처리정지 요구는 「개인정보 보호법」 제35조 제4항, 제37조 제2항에 의하여 정보주체의 권리가 제한 될 수 있습니다.\\n\\n⑤ 개인정보의 정정 및 삭제 요구는 다른 법령에서 그 개인정보가 수집 대상으로 명시되어 있는 경우에는 그 삭제를 요구할 수 없습니다.\\n\\n⑥ COLLECTION은(는) 정보주체 권리에 따른 열람의 요구, 정정·삭제의 요구, 처리정지의 요구 시 열람 등 요구를 한 자가 본인이거나 정당한 대리인인지를 확인합니다.</string>-\n    <string name=\"privacy_fourth_text\">제4조(처리하는 개인정보의 항목 작성)</string>\n    <string name=\"privacy_fourth_1_text\">&lt; COLLECTION &gt;은(는) 다음의 개인정보 항목을 처리하고 있습니다.</string>\n    <string name=\"privacy_fourth_2_text\">1.&lt; 홈페이지 회원가입 및 관리 &gt;\\n필수항목 : 휴대전화번호, 비밀번호, 로그인ID, 이름, 서비스 이용 기록, 접속 로그, 쿠키, 닉네임\\n\\n2.&lt; 민원사무 처리 &gt;\\n필수항목 : 이메일, 로그인ID, 서비스 이용 기록, 접속 로그, 쿠키\\n\\n3.&lt; 재화 또는 서비스 제공 &gt;\\n필수항목 : 성별, 생년월일, 신체정보, 서비스 이용 기록, 접속 로그, 쿠키, 닉네임\\n\\n4.&lt; 마케팅 및 광고에의 활용 &gt;\\n필수항목 : 성별, 생년월일, 서비스 이용 기록, 접속 로그, 쿠키</string>\n    <string name=\"privacy_five_text\">제5조(개인정보의 파기)</string>\n    <string name=\"privacy_five_1_text\">① &lt; COLLECTION &gt; 은(는) 개인정보 보유기간의 경과, 처리목적 달성 등 개인정보가 불필요하게 되었을 때에는 지체없이 해당 개인정보를 파기합니다.\\n\\n② 정보주체로부터 동의받은 개인정보 보유기간이 경과하거나 처리목적이 달성되었음에도 불구하고 다른 법령에 따라 개인정보를 계속 보존하여야 하는 경우에는, 해당 개인정보를 별도의 데이터베이스(DB)로 옮기거나 보관장소를 달리하여 보존합니다.1. 법령 근거 :2. 보존하는 개인정보 항목 : 계좌정보, 거래날짜\\n\\n③ 개인정보 파기의 절차 및 방법은 다음과 같습니다.</string>\n    <string name=\"privacy_five_2_text\">1. 파기절차\\n&lt; COLLECTION &gt; 은(는) 파기 사유가 발생한 개인정보를 선정하고, &lt; COLLECTION &gt; 의 개인정보 보호책임자의 승인을 받아 개인정보를 파기합니다.\\n\\n2. 파기방법\\n전자적 파일 형태의 정보는 기록을 재생할 수 없는 기술적 방법을 사용합니다</string>\n    <string name=\"privacy_six_text\">제6조(개인정보의 안전성 확보 조치)</string>\n    <string name=\"privacy_six_1_text\">&lt; COLLECTION &gt;은(는) 개인정보의 안전성 확보를 위해 다음과 같은 조치를 취하고 있습니다.</string>\n    <string name=\"privacy_six_2_text\">1. 정기적인 자체 감사 실시\\n개인정보 취급 관련 안정성 확보를 위해 정기적(분기 1회)으로 자체 감사를 실시하고 있습니다.\\n\\n2. 개인정보에 대한 접근 제한\\n개인정보를 처리하는 데이터베이스시스템에 대한 접근권한의 부여,변경,말소를 통하여 개인정보에 대한 접근통제를 위하여 필요한 조치를 하고 있으며 침입차단시스템을 이용하여 외부로부터의 무단 접근을 통제하고 있습니다.\\n\\n3. 개인정보의 암호화\\n이용자의 개인정보는 비밀번호는 암호화 되어 저장 및 관리되고 있어, 본인만이 알 수 있으며 중요한 데이터는 파일 및 전송 데이터를 암호화 하거나 파일 잠금 기능을 사용하는 등의 별도 보안기능을 사용하고 있습니다.</string>\n    <string name=\"privacy_seven_text\">제7조(개인정보 자동 수집 장치의 설치•운영 및 거부에 관한 사항)</string>\n    <string name=\"privacy_seven_1_text\">① COLLECTION 은(는) 이용자에게 개별적인 맞춤서비스를 제공하기 위해 이용정보를 저장하고 수시로 불러오는 ‘쿠키(cookie)’를 사용합니다.\\n\\n② 쿠키는 웹사이트를 운영하는데 이용되는 서버(http)가 이용자의 컴퓨터 브라우저에게 보내는 소량의 정보이며 이용자들의 PC 컴퓨터내의 하드디스크에 저장되기도 합니다.\\n\\n가. 쿠키의 사용 목적 : 이용자가 방문한 각 서비스와 웹 사이트들에 대한 방문 및 이용형태, 인기 검색어, 보안접속 여부, 등을 파악하여 이용자에게 최적화된 정보 제공을 위해 사용됩니다.\\n\\n나. 쿠키의 설치•운영 및 거부 : 웹브라우저 상단의 도구>인터넷 옵션>개인정보 메뉴의 옵션 설정을 통해 쿠키 저장을 거부 할 수 있습니다.\\n\\n다. 쿠키 저장을 거부할 경우 맞춤형 서비스 이용에 어려움이 발생할 수 있습니다.</string>\n    <string name=\"privacy_eight_text\">제8조 (개인정보 보호책임자)</string>\n    <string name=\"privacy_eight_1_text\">① COLLECTION 은(는) 개인정보 처리에 관한 업무를 총괄해서 책임지고, 개인정보 처리와 관련한 정보주체의 불만처리 및 피해구제 등을 위하여 아래와 같이 개인정보 보호책임자를 지정하고 있습니다.</string>\n    <string name=\"privacy_eight_2_text\">• ▶ 개인정보 보호책임자\\n• 성명 :양유림\\n• 직책 :Project Manager\\n• 직급 :Project Manager\\n• 연락처 :01039966042, collectionwith8@gmail.com\\n※ 개인정보 보호 담당부서로 연결됩니다.</string>\n    <string name=\"privacy_eight_3_text\">② 정보주체께서는 COLLECTION 의 서비스(또는 사업)을 이용하시면서 발생한 모든 개인정보 보호 관련 문의, 불만처리, 피해구제 등에 관한 사항을 개인정보 보호책임자 및 담당부서로 문의하실 수 있습니다. COLLECTION 은(는) 정보주체의 문의에 대해 지체 없이 답변 및 처리해드릴 것입니다.</string>\n    <string name=\"privacy_nine_text\">제9조(개인정보 열람청구)</string>\n    <string name=\"privacy_nine_1_text\">정보주체는 ｢개인정보 보호법｣ 제35조에 따른 개인정보의 열람 청구를 아래의 부서에 할 수 있습니다.&lt; COLLECTION &gt;은(는) 정보주체의 개인정보 열람청구가 신속하게 처리되도록 노력하겠습니다.</string>\n    <string name=\"privacy_nine_2_text\">• ▶ 개인정보 열람청구 접수·처리 부서\\n• 부서명 : 8:-)\\n• 담당자 : 양유림\\n• 연락처 : 01039966042, collectionwith8@gmail.com</string>\n    <string name=\"privacy_ten_text\">제10조(권익침해 구제방법)</string>\n    <string name=\"privacy_ten_1_text\">정보주체는 개인정보침해로 인한 구제를 받기 위하여 개인정보분쟁조정위원회, 한국인터넷진흥원 개인정보침해신고센터 등에 분쟁해결이나 상담 등을 신청할 수 있습니다. 이 밖에 기타 개인정보침해의 신고, 상담에 대하여는 아래의 기관에 문의하시기 바랍니다.</string>\n    <string name=\"privacy_ten_2_text\">1. 개인정보분쟁조정위원회\\n: (국번없이) 1833-6972 (www.kopico.go.kr)\\n\\n2. 개인정보침해신고센터\\n: (국번없이) 118 (privacy.kisa.or.kr)\\n\\n3. 대검찰청\\n: (국번없이) 1301 (www.spo.go.kr)\\n\\n4. 경찰청\\n: (국번없이) 182 (ecrm.cyber.go.kr)</string>\n    <string name=\"privacy_ten_3_text\">「개인정보보호법」제35조(개인정보의 열람), 제36조(개인정보의 정정·삭제), 제37조(개인정보의 처리정지 등)의 규정에 의한 요구에 대 하여 공공기관의 장이 행한 처분 또는 부작위로 인하여 권리 또는 이익의 침해를 받은 자는 행정심판법이 정하는 바에 따라 행정심판을 청구할 수 있습니다.※ 행정심판에 대해 자세한 사항은 중앙행정심판위원회(www.simpan.go.kr) 홈페이지를 참고하시기 바랍니다.\\n\\n※ 행정심판에 대해 자세한 사항은 중앙행정심판위원회(www.simpan.go.kr) 홈페이지를 참고하시기 바랍니다.</string>\n\n\n\n\n\n\n    <!-- accountDeletepage -->\n    <string name=\"account_delete\">회원탈퇴</string>\n    <string name=\"account_title_first\">진짜로..?ㅠㅠ</string>\n    <string name=\"account_title_second\">정말로</string>\n    <string name=\"account_title_third\">탈퇴하실 건가요?</string>\n    <string name=\"account_title_fourth\">탈퇴시 데이터 복구가 불가능 합니다.</string>\n    <string name=\"account_second_title_first\">그동안</string>\n    <string name=\"account_second_title_second\">반가웠어요 :)</string>\n    <string name=\"account_second_title_third\">정보 보호를 위해 비밀번호를 입력해주세요.</string>\n\n    <!-- Finsh page -->\n    <string name=\"title\">학교갈때 입는 데일리룩</string>\n    <string name=\"comment\">오늘 룩에 대한 코멘트를 적어보세요!</string>\n\n    <string name=\"material_calendar_monday\">M</string>\n    <string name=\"material_calendar_tuesday\">T</string>\n    <string name=\"material_calendar_wednesday\">W</string>\n    <string name=\"material_calendar_thursday\">T</string>\n    <string name=\"material_calendar_friday\">F</string>\n    <string name=\"material_calendar_saturday\">S</string>\n    <string name=\"material_calendar_sunday\">S</string>\n\n    <array name=\"material_calendar_months_array\">\n        <item>January</item>\n        <item>February</item>\n        <item>March</item>\n        <item>April</item>\n        <item>May</item>\n        <item>June</item>\n        <item>July</item>\n        <item>August</item>\n        <item>September</item>\n        <item>October</item>\n        <item>November</item>\n        <item>December</item>\n    </array>\n\n    <string name=\"material_calendar_today_button\">Today</string>\n    <string name=\"material_calendar_positive_button\">OK</string>\n    <string name=\"material_calendar_negative_button\">Cancel</string>\n    <style name=\"TextAppearance.Material.DatePicker.DayOfWeekLabel\" parent=\"TextAppearance.AppCompat\">\n        <item name=\"android:fontFamily\">@font/roboto_light</item>\n        <item name=\"android:textSize\">24dp</item>\n        <item name=\"android:textColor\">@color/white</item>\n    </style>\n    <style name=\"TextAppearance.Material.DatePicker.MonthLabel\" parent=\"TextAppearance.AppCompat\">\n        <item name=\"android:fontFamily\">@font/roboto_light</item>\n        <item name=\"android:textSize\">24dp</item>\n        <item name=\"android:textColor\">@color/black</item>\n    </style>\n    <style name=\"TextAppearance.Material.DatePicker.DayOfMonthLabel\" parent=\"TextAppearance.AppCompat\">\n        <item name=\"android:fontFamily\">@font/roboto_light</item>\n        <item name=\"android:textSize\">24dp</item>\n        <item name=\"android:textColor\">@color/black</item>\n    </style>\n    <style name=\"TextAppearance.Material.DatePicker.YearLabel\" parent=\"TextAppearance.AppCompat\">\n        <item name=\"android:fontFamily\">@font/roboto_light</item>\n        <item name=\"android:textSize\">24dp</item>\n        <item name=\"android:textColor\">@color/black</item>\n    </style>\n\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision 99780c6c70106d18888a2546cb17a4b3e28d09b8)
+++ b/app/src/main/res/values/strings.xml	(date 1647413364866)
@@ -83,7 +83,7 @@
     <string name="privacy_rule">개인정보 취급방침</string>
     <string name="mail">문의하기</string>
     <string name="logout">로그아웃</string>
-    <string name="app_version">v.1.0.0</string>
+    <string name="app_version">v.1.0.1</string>
     <string name="nickname_annotation">콜렉션에서 사용할 닉네임을 입력해주세요.</string>
 
     <!-- myLook page -->
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\n    id 'com.android.application'\n    id 'kotlin-android'\n    id 'kotlin-kapt'\n    id 'androidx.navigation.safeargs.kotlin'\n    id 'kotlin-parcelize'\n}\n\n\nandroid {\n    compileSdk 31\n\n    defaultConfig {\n        applicationId \"com.eight.collection\"\n        minSdk 26\n\n        targetSdk 31\n        versionCode 1\n        versionName \"1.0\"\n\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n    }\n\n    buildTypes {\n        release {\n            minifyEnabled true\n            debuggable = false\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n        }\n    }\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n    kotlinOptions {\n        jvmTarget = '1.8'\n    }\n    viewBinding {\n        enabled = true\n    }\n}\n\ndependencies {\n\n    implementation 'androidx.core:core-ktx:1.7.0'\n    implementation 'androidx.appcompat:appcompat:1.4.1'\n    implementation 'com.google.android.material:material:1.5.0'\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'\n    implementation 'com.hedgehog.ratingbar:app:1.1.2'\n    implementation 'androidx.databinding:databinding-runtime:7.1.1'\n    testImplementation 'junit:junit:4.+'\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\n\n    //Retrofit\n    implementation \"com.squareup.retrofit2:retrofit:$retrofit_version\"\n    implementation \"com.squareup.retrofit2:converter-gson:$retrofit_version\"\n    implementation \"com.squareup.retrofit2:adapter-rxjava2:$retrofit_version\"\n\n    //okHttp\n    implementation \"com.squareup.okhttp3:okhttp:$okHttp_version\"\n    implementation \"com.squareup.okhttp3:logging-interceptor:$okHttp_version\"\n\n    //Glide\n    implementation \"com.github.bumptech.glide:glide:$glide_version\"\n    annotationProcessor \"com.github.bumptech.glide:compiler:$glide_version\"\n\n    //viewpager2\n    implementation \"androidx.viewpager2:viewpager2:1.0.0\"\n\n    //RoomDB\n    implementation \"androidx.room:room-runtime:$roomdb_version\"\n    kapt \"androidx.room:room-compiler:$roomdb_version\"\n\n    //Gson\n    implementation 'com.google.code.gson:gson:2.8.7'\n\n    //Navigation\n    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.1'\n    implementation 'androidx.navigation:navigation-ui-ktx:2.4.1'\n\n    //calendar\n    implementation 'com.github.kizitonwose:CalendarView:1.0.4'\n\n    //RecyclerView\n    implementation 'androidx.recyclerview:recyclerview:1.2.1'\n\n    //flexbox\n    implementation \"com.google.android:flexbox:2.0.1\"\n\n    //datepicker\n    implementation 'com.applandeo:material-calendar-view:1.9.0-rc03'\n\n    //infinitiViewPager\n    implementation 'com.asksira.android:loopingviewpager:1.4.1'\n\n    implementation 'com.github.prolificinteractive:material-calendarview:2.0.1'\n\n    //popupmenu\n    implementation \"com.github.skydoves:powermenu:2.2.0\"\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 99780c6c70106d18888a2546cb17a4b3e28d09b8)
+++ b/app/build.gradle	(date 1647418582443)
@@ -15,8 +15,8 @@
         minSdk 26
 
         targetSdk 31
-        versionCode 1
-        versionName "1.0"
+        versionCode 2
+        versionName "1.0.1"
 
         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
     }
